
/**
* _RentalCarImplBase.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from RentalCar.idl
* Friday, 17 June 2022 23:01:07 o'clock CEST
*/

public abstract class _RentalCarImplBase extends org.omg.CORBA.portable.ObjectImpl
                implements RentalCar, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors
  public _RentalCarImplBase ()
  {
  }

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("_get_priceForDay", new java.lang.Integer (0));
    _methods.put ("_set_priceForDay", new java.lang.Integer (1));
    _methods.put ("_get_isForRent", new java.lang.Integer (2));
    _methods.put ("_set_isForRent", new java.lang.Integer (3));
    _methods.put ("_get_rentedTimes", new java.lang.Integer (4));
    _methods.put ("_set_rentedTimes", new java.lang.Integer (5));
    _methods.put ("_get_CarStruct", new java.lang.Integer (6));
    _methods.put ("_set_CarStruct", new java.lang.Integer (7));
    _methods.put ("rent", new java.lang.Integer (8));
    _methods.put ("priceForDays", new java.lang.Integer (9));
    _methods.put ("unrent", new java.lang.Integer (10));
    _methods.put ("currRenting", new java.lang.Integer (11));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // RentalCar/_get_priceForDay
       {
         int $result = (int)0;
         $result = this.priceForDay ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 1:  // RentalCar/_set_priceForDay
       {
         int newPriceForDay = in.read_long ();
         this.priceForDay (newPriceForDay);
         out = $rh.createReply();
         break;
       }

       case 2:  // RentalCar/_get_isForRent
       {
         boolean $result = false;
         $result = this.isForRent ();
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 3:  // RentalCar/_set_isForRent
       {
         boolean newIsForRent = in.read_boolean ();
         this.isForRent (newIsForRent);
         out = $rh.createReply();
         break;
       }

       case 4:  // RentalCar/_get_rentedTimes
       {
         int $result = (int)0;
         $result = this.rentedTimes ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 5:  // RentalCar/_set_rentedTimes
       {
         int newRentedTimes = in.read_long ();
         this.rentedTimes (newRentedTimes);
         out = $rh.createReply();
         break;
       }

       case 6:  // RentalCar/_get_CarStruct
       {
         Car $result = null;
         $result = this.CarStruct ();
         out = $rh.createReply();
         CarHelper.write (out, $result);
         break;
       }

       case 7:  // RentalCar/_set_CarStruct
       {
         Car newCarStruct = CarHelper.read (in);
         this.CarStruct (newCarStruct);
         out = $rh.createReply();
         break;
       }

       case 8:  // RentalCar/rent
       {
         try {
           Costumer cost = CostumerHelper.read (in);
           this.rent (cost);
           out = $rh.createReply();
         } catch (RentalCarPackage.AlreadyRented $ex) {
           out = $rh.createExceptionReply ();
           RentalCarPackage.AlreadyRentedHelper.write (out, $ex);
         } catch (RentalCarPackage.IsNotForRental $ex) {
           out = $rh.createExceptionReply ();
           RentalCarPackage.IsNotForRentalHelper.write (out, $ex);
         }
         break;
       }

       case 9:  // RentalCar/priceForDays
       {
         int days = in.read_long ();
         int $result = (int)0;
         $result = this.priceForDays (days);
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 10:  // RentalCar/unrent
       {
         try {
           this.unrent ();
           out = $rh.createReply();
         } catch (RentalCarPackage.NotRented $ex) {
           out = $rh.createExceptionReply ();
           RentalCarPackage.NotRentedHelper.write (out, $ex);
         }
         break;
       }

       case 11:  // RentalCar/currRenting
       {
         Person $result = null;
         $result = this.currRenting ();
         out = $rh.createReply();
         PersonHelper.write (out, $result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:RentalCar:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }


} // class _RentalCarImplBase
